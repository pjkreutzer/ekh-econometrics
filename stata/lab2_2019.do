**************************************************************
*                           EKHM65                           *
*        Lab 2: Descriptives and intro to regression         *
**************************************************************

*********************************
* SECTION 0: LET'S FINISH LAB 1 *
*********************************

log using lab_2.log, replace

cd "C:\Users\en8215de\OneDrive - Lund University\EKHM65_Econometrics1\2019\lab1_2019"
use lab1_2019.dta, clear
rename var7 name
generate edu = 1 if education<=9
replace edu = 2 if education>=10 & education<=12
replace edu = 3 if education>12 & education!=.
replace edu = 4 if education==.
* HERE WE SPECIFY THAT THE TOP EDUCATIONAL LEVEL SHOULD BE BETWEEN 12 YEARS AND THE HIGHEST REAL NUMBER BEFORE INFINITY (I.E. MISSING VALUES).
* ANOTHER OPTION WOULD BE TO KEEP MISSING VALUES AS A CATEGORY OF THEIR OWN, SO THAT WE DO NOT LOSE THEM FROM THE ANALYSIS.
* IN THIS CASE WE COULD SPECIFY 'replace edu = 99 if education==.' (THE VALUE IS COMPLETELY ARBITRARY)

label variable edu "Educational Level"

label define edulbl 1 "Primary" 2 "Secondary" 3 "University" 4 "missing"
label values edu edulbl
* 'label define' CREATES LABELS THAT ARE ASSIGNED TO SPECIFIC VALUES
* 'label values' APPLIES THE CREATED LABELS TO A VARIABLE'S VALUES

browse education edu

gen flag=1 if education==.
browse education edu flag
drop flag

drop if education==.
* CAREFULLY CONSIDER WHETHER DROPPING MISSING VALUES IS THE BEST OPTION
* YOU MAY WANT TO CREATE A CATEGORY FOR MISSING VARIABLES.
* OBSERVATIONS WITH MISSING VALUES IN ONE VARIABLE MAY CONTAIN INFORMATION IN OTHER VARIABLES




**************MEASURES OF CENTRAL TENDENCY OF CONTINUOUS VARIABLES**************




* THIS SECTION WILL TALK ABOUT HOW TO IDENTIFY IMPORTANT SUMMARY STATISTICS OF CONTINUOUS VARIABLES
 
sum age labor_income
* THE COMMAND 'sum' GIVES US THE BASIC PARAMETERS OF THE VARIABLES' DISTRIBUTION (I.E. MEAN, STANDARD DEVIATION, MINIMUM AND MAXIMUM)

sum labor_income, detail
* BY SPECIFYING THE 'detail' OPTION, WE GET A BIT MORE INFORMATION ON THE DISTRIBUTION (E.G. PERCENTILES, SKEWNESS, KURTOSIS)

tab edu, sum(labor_income)
* THE 'tab' AND 'sum' COMMANDS CAN BE USED TOGETHER TO GET SUMMARY STATISTICS ALONG WITH FREQUENCIES.
* THIS IS AN EXTREMELY USEFUL WAY TO UNDERSTAND YOUR DATA ESPECIALLY ACROSS CATEGORIES

centile labor_income, centile(0 (5) 100)
centile labor_income, centile(0 (1) 100)
* USING THE 'centile' COMMAND, WE CAN SEE THE VALUE OF THE VARIABLE AT EACH PERCENTILE

histogram labor_income, percent normal bin(30)
* A HISTOGRAM IS A SIMPLE WAY TO SEE HOW YOUR DATA ARE DISTRIBUTED.
* THE OPTION 'normal' OVERLAYS A NORMAL DISTRIBUTION PLOT ONTO YOUR DATA TO GIVE YOU AN IDEA OF HOW YOUR OWN DATA COMPARE.
* THE OPTION 'percent' JUST TELLS STATA TO REPORT THE HISTOGRAM IN TERMS OF PERCENTAGES INSTEAD OF ITS DEFAULT, WHICH IS DENSITY.
* 'bin(X)' TELLS STATA TO USE X NUMBER OF CATEGORIES IN THE HISTOGRAM ON THE X-AXIS; YOU CAN PLAY AROUND WITH THIS AS YOU WISH.
* THE GOAL IS TO GET A GRAPH THAT HELPS US UNDERSTAND THE DATA BETTER.  

histogram labor_income if labor_income<100000, percent normal bin(10)
* MANY COMMANDS CAN USE THE 'if' OPTION.
* HERE, WE USE 'if' TO LOOK AT THE HISTOGRAM FOR A SUBSET OF OUR DATA.
* SOMETIMES THIS IS HELPFUL TO VISUALIZE HOW OUTLIERS MAY BE AFFECTING THE DATA'S DISTRIBUTION.

table edu, contents(mean labor_income)
table edu, contents(median labor_income)
* THESE TABLES ALLOW US TO SEE THE MEAN INCOME AND MEDIAN INCOME PER EDUCATIONAL LEVEL
* THE DEFAULT SPECIFICATION IN STATA IS 'contents(freq)' WHICH YOU DON'T HAVE TO SPECIFY TO GET THE FREQUENCIES AS WE DID EARLIER
* THESE COMMANDS PROVIDE SIMILAR OUTPUTS TO THE 'tab-sum' COMMANDS

table edu, contents(max labor_income)
table edu, contents(min labor_income)
table edu, contents(sd labor_income)
table edu, contents(max labor_income min labor_income sd labor_income)
* YOU CAN ALSO SEE A NUMBER OF OTHER SUMMARY STATISTICS WITH THIS OPTION
* HERE WE SPECIFY THE MAXIMUM, MINIMUM AND STANDARD DEVIATION FOR LABOR INCOME IN EACH EDUCATIONAL GROUP




********************************************************************************
* YOUR TURN:
*	a) CREATE A HISTOGRAM OF AGE
*	b) TABULATE THE MEAN AGE OF INDIVIDUALS BY THEIR HOMEOWNER STATUS.
*	c) TABULATE THE MEDIAN LABOR INCOME BY THE NUMBER OF CHILDREN
********************************************************************************




* WE CAN ALSO CALCULATE MEANS, MEDIANS, OR A HOST OF OTHER STATISTICS WHEN WE CREATE A NEW VARIABLE

sort  age labor_income name
* THE 'sort' COMMAND TELLS STATA TO ARRANGE THE VARIABLES FROM SMALLEST TO LARGEST (OR FROM A TO Z)
* EACH VARIABLE IN THE COMMAND REPRESENTS A LEVEL FOR SORTING.
* SO, FIRST 'age' WILL BE SORTED FROM SMALLEST TO LARGEST. THEN, WITHIN EACH AGE, 'labor_income' WILL BE SORTED FROM SMALLEST TO LARGEST, ETC.

gsort age -labor_income
* THE 'gsort' COMMAND ALLOWS US TO SORT THINGS FROM LARGEST TO SMALLEST.
* IN THIS CASE, WE SORT AGE FROM SMALLEST TO LARGEST AND THEN WITHIN EACH AGE, WE SORT INCOME FROM LARGEST TO SMALLEST.

bysort education: egen mean_inc = mean(labor_income)
* WE CAN ALSO SIMPLY USE THE 'bysort' COMMAND, WHICH ACTS AS A PREFIX TO OTHER COMMANDS.
* THIS ELIMINATES THE NEED FOR SEVERAL LINES OF CODE.
* 'egen' IS A POWERFUL COMMAND THAT ALLOWS US TO GENERATE VARIABLES ACROSS OBSERVATIONS

sort education
br name education labor_income mean_inc
* TAKE A LOOK AT WHAT THE COMMAND HAS DONE

twoway bar mean_inc education, title(Mean Income by Years of Education) ytitle(Mean Income) xtitle(Years of Education)
* 'twoway' IS A GRAPH TYPE WHICH ALLOWS FOR TWO VARIABLES.
* THERE ARE MANY 'twoway' GRAPHS, SUCH AS 'scatter', 'line' AND OTHERS.
* THIS GIVES US A BAR CHART WITH mean_inc ON THE Y-AXIS AND education ON THE X-AXIS

* WE CAN USE THE 'egen' COMMAND, FOR INSTANCE, TO HELP US MANUALLY CALCULATE THE COVARIANCE OF LABOR INCOME AND YEARS OF EDUCATION
* FORMULA FOR COVARIANCE: (1/n -1)(sum(xi - xavg)(yi - yavg))

egen xmean = mean(education) 	
*GENERATES THE MEAN YEARS OF EDUCATION (xavg)
gen xxmean = education-xmean	
*SUBTRACTS THE MEAN FROM THE VARIABLE (xi-xavg)

egen ymean = mean(labor_income)	
*GENERATES THE MEAN OF LABOR INCOME (yavg)
gen yymean = labor_income-ymean	
*SUBTRACTS THE MEAN FROM THE VARIABLE (yi-yavg)

gen xy = xxmean*yymean			 
*GENERATES THE PRODUCT OF THE MEANS OF YEARS OF EDUCATION AND LABOR INCOME ((xi - xavg)(yi - yavg))
egen xysum = sum(xy)			
*SUMS THE PRODUCT OF THE MEANS (sum(xi - xavg)(yi - yavg))

list xysum in 1
* GIVES US THE NUMERATOR.

display 2062407/48		
* 'display' IS A COMMAND TO USE A CALCULATOR FUNCTION IN STATA.		
* DENOMINATOR COMES FROM n-1, WHERE n IS THE NUMBER OF OBSERVATIONS (i.e. 49 - 1)
* (1/n -1)(sum(xi - xavg)(yi - yavg))

* WE CAN ALSO JUST USE A SIMPLE COMMAND TO FIND OUT THE COVARIANCE
gen ed=education
corr education ed, covariance

corr education labor_income
* IF WE DON'T SPECIFY THE 'covariance' OPTION, WE JUST GET PEARSON'S CORRELATION COEFFICIENT
* THIS IS A STANDARDIZED COEFFICIENT THAT TELLS US THE GENERAL RELATIONSHIP BETWEEN TWO VARIABLES

drop x* y*
* BY PUTTING A STAR AFTER THE X AND Y, WE TELL STATA THAT WE WANT TO DROP EVERYTHING THAT STARTS WITH AN X OR Y


clear
* REMOVES ALL DATA FROM MEMORY




*************************IMPORTING DATA FROM EXCEL SHEET************************




* SIMPLY COPY DATASET FROM EXCEL AND PASTE INTO STATA DATA EDITOR.
* DATA IN EXCEL SHOULD BE ORGANIZED SO THAT ROWS ARE OBSERVATIONS AND COLUMNS ARE VARIABLES.
* MAKE SURE THE FIRST ROW OF EACH COLUMN IS A VARIABLE NAME, STARTING WITH A LETTER AND NOT A NUMBER.
 
destring y2004, replace force
destring y2005, replace force
* HERE, WE USE THE DESTRING COMMAND TO FORCE STATA TO INTERPRET THE NUMBERS AS NUMBERS RATHER THAN LETTERS.
* IT SEES THEM AS LETTERS BECAUSE ONE OF THE OBSERVATIONS HAS A LETTER MIXED IN WITH THE NUMBER.
* WHEN WE USE THIS, HOWEVER, WE WILL LOSE THE OBSERVATIONS THAT ARE CAUSING PROBLEMS.
* USE IT CAREFULLY.

clear

import excel "C:\Users......", firstrow clear
* THE firstrow OPTION TELLS STATA TO INTERPRET THE FIRST ROW OF YOUR EXCEL FILE AS VARIABLES NAMES




***************************************************************
* SECTION 1: RECAP OF LAB 1 AND GETTING STARTED WITH THE DATA *
***************************************************************

clear all
set more off, permanently 
cd "C:\Users\en8215de\OneDrive - Lund University\EKHM65_Econometrics1\2019\lab2_2019"
use "lab2_2019_data.dta", clear

compress
* compress ALLOWS YOU TO SAVE STORAGE SPACE

log using "Lab2.log", replace /*IN ALTERNATIVE YOU CAN USE THE OPTION append TO CONTINUE WRITING ON THE PREVIOUS FILE*/
cmdlog using "Lab2cmd.log", replace
* CMDLOGS WILL SAVE COMMANDS

* WITH ANY NEW DATA, IT IS USEFUL TO LOOK AT ITS STRUCTURE, SUMMARY STATISTICS, AND GRAPHICAL REPRESENTATION.
* REMEMBER THAT YOU CAN USE THE 'if' OPTION TO SPECIFY A CONDITION ON YOUR COMMANDS.




********************************************************************************
* TIME TO PRACTICE WHAT WE LEARNED LAST TIME:
*	a) BROWSE THE DATA FOR ALL CARS WITH 4 CYLINDERS
*	b) BROWSE ONLY THE TWO VARIABLES FOR CAR TYPE AND HORSEPOWER
********************************************************************************	




* IF WE WANT TO BROWSE A SPECIFIC VALUE OF A STRING VARIABLE, WE NEED TO USE QUOTATION MARKS:
browse if type=="suv"
browse if type!="suv"

* WE CAN ALSO IMPOSE MULTIPLE CONDITIONS WHEN WE BROWSE OR USE OTHER COMMANDS. FOR EXAMPLE:
browse if type == "sedan" & cylinder==4

* USING THE 'sort' COMMAND, FIND OUT WHAT IS THE LOWEST HORSEPOWER.

* WHAT IS ANOTHER COMMAND FOR FINDING OUT THE LOWEST HORSEPOWER? (THERE ARE SEVERAL POSSIBILITIES) 

* WE MENTIONED LAST TIME THAT WE CAN ALSO EXAMINE HOW THE DATA ARE STORED AND THEIR LABELS USING THE 'describe' COMMAND.
describe




********************************************************************************
* WE SEE THAT THERE ARE VARIABLES MISSING LABELS.
* USE THE 'label' COMMAND TO APPLY LABELS TO 'cylinder' AND 'type'.
*		'cylinder' IS THE NUMBER OF CYLINDERS IN THE CAR.
*		'type' IS THE TYPE OF VEHICLE.
*
* WE DON'T WANT TO HAVE TO TYPE _ EVERYTIME WE TYPE OUT 'horse_power'
* RENAME THE VARIABLE 'horse_power' TO 'hpower'
********************************************************************************

rename horse_power hpower


********************************SUMMARY STATISTICS******************************




* IF YOU ARE EVER UNSURE ABOUT THE EXACT SYNTAX, YOU CAN ALWAYS USE THE 'help' COMMAND

* NOW THAT WE HAVE LOOKED AT THE STRUCTURE OF THE DATA, LET'S LOOK AT SOME SUMMARY STATISTICS
sum

* WE CAN ALSO LOOK ONLY AT CERTAIN VARIABLES BY USING A VARIABLE LIST AFTER THE COMMAND
sum cylinder hpower fuel

* IF WE USE THE OPTION 'detail' WE CAN GET A BIT MORE INFORMATION, LIKE THE MEDIAN AND INTERQUARTILE RANGE, AMONG OTHER THINGS.
* THIS COMMAND CAN BE USEFUL FOR US TO QUICKLY LOOK FOR ANY OUTLIERS
sum liter length, detail

* IF SOME VARIABLES HAVE 0 OBSERVATIONS, IT IS PROBABLY BECAUSE THEY ARE STRING VARIABLES.
sum type

* WE CAN ALSO LOOK AT CHARACTERISTICS WITHIN GROUPS
* WHICH CAR TYPE HAS THE LONGEST AVG LENGTH?
tab type, sum(length)

* NOTE: YOU CAN ATTACH NUMERIC LABELS TO STRING VARIABLES BY USING THE 'encode' COMMAND.
encode type, gen(types)
codebook types

* NOW 'type' IS A USELESS VARIABLE SO WE CAN GO AHEAD A DROP IT
drop type


* WE HAVE LOOKED AT THE SUMMARY STATISTICS AND DATA STRUCTURE, SO NOW LET'S VISUALIZE OUR DATA.
* WE CAN DO A SIMPLE SCATTER PLOT USING THE 'twoway' COMMAND.
* REMEMBER: THE DEPENDENT VARIABLE (Y) SHOULD COME FIRST IN THE COMMAND.
twoway (scatter hpower liter)

* LET'S SEE HOW THE SCATTER PLOT WOULD LOOK FOR VEHICLES WITH LESS THAN 350 HP
twoway (scatter hpower liter if hpower<350)

*THERE SEEMS TO BE A CLEAR TREND WHETHER OR NOT WE RESTRICT THE SAMPLE.
*WE CAN APPLY A LINEAR FITTED LINE TO THE PLOT TO GET A BETTER IDEA.
twoway (scatter hpower liter if hpower<350) (lfit hpower liter if hpower<350)

*REMEMBER: YOU NEED TO SPECIFY THE SAME RESTRICTIONS FOR THE 'lfit' COMMAND AS YOU DO FOR THE 'scatter' COMMAND.
*THE BELOW EXAMPLE SHOWS YOU WHY:
twoway (scatter hpower liter if hpower<350) (lfit hpower liter if hpower<350) (lfit hpower liter)

* IT TURNS OUT THERE IS AN UPWARD, OR POSITIVE, TREND.
* THE 'graph matrix' COMMAND IS A SIMPLE WAY TO LOOK AT SEVERAL SCATTER PLOTS AT THE SAME TIME.
* THIS COMMAND WORKS BEST WHEN YOU HAVE MORE CONTINOUS VARIABLES
graph matrix hpower fuel liter



* WE CAN USE HISTOGRAMS TO GET AN IDEA OF HOW OUR VARIABLES ARE DISTRIBUTED.
* THE BIN SELECTION IS UP TO YOU.  I CHOSE 15 HERE BECAUSE I THOUGHT IT GIVES A REASONABLE PICTURE OF THE DISTRIBUTION.
* HERE THE DISTRIBUTION IS SLIGHTLY POSITIVELY SKEWED (LONG TAIL TOWARD THE RIGHT)
hist liter, bin(15) norm percent

hist fuel, bin(15) percent norm
* HERE WE SEE AN EXAMPLE OF A (RELATIVELY) NORMAL DISTRIBUTION

corr liter fuel cylinder hpower
*WE CAN DO A QUICK CORRELATION MATRIX TO SEE CORRELATION COEFFICIENTS BETWEEN DIFFERENT VARIABLES


/*
IT IS GOOD PRACTICE TO BEGIN ANY DATA ANALYSIS WITH THESE COMMANDS.
UNDERSTANDING THE DATA STRUCTURE IS ALWAYS IMPORTANT.
SIMPLY USING THE 'browse', 'sum' OR 'scatter' COMMANDS, FOR EXAMPLE, CAN ALERT YOU TO ANY OUTLIERS THAT MAY NEED SOME ATTENTION.

A NOTE ON OUTLIERS.  
I WOULD NOT RECOMMEND DROPPING OBSERVATIONS UNLESS THEY ARE CLEARLY MISTAKES OR IF THEY ARE OUTSIDE THE POPULATION OF INTEREST
ESPECIALLY WHEN WE HAVE SUCH A SMALL SAMPLE SIZE DROPPING OBSERVATIONS CAN BE DETRIMENTAL. 
SOMETIMES SECONDARY RESEARCH WILL BE NECESSARY TO VERIFY YOUR DATA.
*/










*****SECTION II. SIMPLE LINEAR REGRESSION*****

/*
YOU ARE INTERESTED IN UNDERSTANDING THE RELATIONSHIP BETWEEN A VEHICLE'S FUEL EFFICIENCY (COMBINED MILES PER GALLON) AND ITS WEIGHT.
TO DO THIS, WE HAVE DECIDED TO RUN A SIMPLE LINEAR REGRESSION: y_i = a + BX_i + e
OUR VARIABLES ARE: Y_i = COMBINED MILES PER GALLON AND X_i = WEIGHT.
*/


* FIRST, IF WE DON'T HAVE THE VARIABLE WE NEED WE MAY NEED TO GENERATE IT OURSELVES.
* IN THIS CASE, WE NEED TO FIGURE OUT THE COMBINED MILES PER GALLON.
* COMBINED MILES PER GALLON = 1 / ((.45/HIGHWAY MPG) + (.55/CITY MPG))

gen combined = 1/((.55/city) + (.45/high))
label var combined "Avg fuel efficiency"
br city high combined

* WE SHOULD EXAMINE OUR NEW VARIABLE TO SEE THAT IT WAS CORRECTLY DEFINED.
sum combined, detail


* THE VARIABLE SEEMS PROPERLY CALCULATED (THERE ARE NO VALUES THAT SEEM UNREASONABLE).
* IT IS ALWAYS IMPORTANT TO CHECK WHETHER VARIABLES YOU CREATE ARE REASONABLE 

* WE SHOULD ALSO LOOK AT THE TWO VARIABLES OF INTEREST FOR AN IDEA OF THEIR RELATIONSHIP:
corr combined weight
twoway (scatter combined weight) (lfit combined weight)


* IT SEEMS LIKE THERE IS A NEGATIVE ASSOCIATION BETWEEN THE VARIABLES.
* NOW THAT WE HAVE EXAMINED THE DATA, WE WANT TO TRY OUT OUR MODEL.
* REMEMBER THAT WE ARE LOOKING AT CARS NOT PEOPLE (I.E. UNIT OF OBSERVATION = CARS), 
* AND ALL OF YOUR ANALYSIS SHOULD KEEP THIS IN MIND.
 
reg combined weight

/*
OUR COEFFICIENT b= -.00583

* LETS TAKE A CLOSER LOOK AT THE OUTPUT PROVIDED!

*******ANOVA TABLE*******

* SS = SUM OF SQUARES
* MODEL: S((Ypred-Ymean)^2)
* RESIDUAL: S((Y-Ypred)^2)
* TOTAL: S((Y-Ymean)^2)

DF = DEGREES OF FREEDOM
TOTAL DF = n-1
MODEL DF = TOTAL NUMBER OF COVARIATES MINUS 1
RESIDUAL DF = TOTAL DF - MODEL DF 

MS = MEAN SQUARES (SS DIVIDED BY THEIR RESPECTIVE DF)

*******OVERALL MODEL FIT*******

* R-SQUARED:
* ADJ R-SQUARED:
ROOT MSE = STANDARD DEVIATION OF THE ERROR TERM (SQUARE ROOT OF THE MEAN SQUARES RESIDUAL)
*/


log close 
cmdlog close
